{
	"artifacts" : 
	[
		{
			"path" : "leetcode"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable"
		],
		"files" : 
		[
			"CMakeLists.txt"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 6,
				"parent" : 0
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "-g"
				},
				{
					"fragment" : "-std=gnu++14"
				}
			],
			"language" : "CXX",
			"languageStandard" : 
			{
				"backtraces" : 
				[
					1
				],
				"standard" : "14"
			},
			"sourceIndexes" : 
			[
				9,
				10,
				15,
				16,
				17,
				18,
				19,
				20,
				21,
				22,
				23,
				24,
				25,
				26,
				27,
				28,
				29,
				30,
				31,
				32,
				33,
				34,
				35,
				36,
				37,
				38,
				39,
				40,
				41,
				42,
				43,
				44,
				45,
				46,
				47,
				48,
				49,
				50,
				51,
				52,
				53,
				54,
				55,
				56,
				57,
				58,
				59,
				60,
				61,
				62,
				63,
				64,
				65,
				66,
				67,
				68,
				69,
				70,
				71,
				72,
				73,
				74,
				75,
				76,
				77,
				78,
				79,
				80,
				81,
				82,
				83,
				84,
				85,
				86,
				87,
				88,
				89,
				90,
				91,
				92,
				93,
				94,
				95,
				96,
				97,
				98,
				99,
				100,
				101,
				102,
				103,
				104,
				105,
				106,
				107,
				108,
				109,
				110,
				111,
				112,
				113,
				114,
				115,
				116,
				117,
				118,
				119,
				120,
				121,
				122,
				123,
				124,
				125,
				126,
				127,
				128,
				129,
				130,
				131,
				132,
				133,
				134,
				135,
				136,
				137,
				138,
				139,
				140,
				141,
				142,
				143,
				144,
				145,
				146,
				147,
				148,
				149,
				150,
				151,
				152,
				153,
				154,
				155,
				156,
				157,
				158,
				159,
				160,
				161,
				162,
				163,
				164,
				165,
				166,
				167,
				168,
				169,
				170,
				171,
				172,
				173,
				174,
				175,
				176,
				177,
				178,
				179,
				180,
				181,
				182,
				183,
				184,
				185,
				186,
				187,
				188,
				189,
				190,
				191,
				192,
				193,
				194,
				195,
				196,
				197,
				198,
				199,
				200,
				201,
				202,
				203,
				204,
				205,
				206,
				207,
				208,
				209,
				210,
				211,
				212
			]
		}
	],
	"id" : "leetcode::@6890427a1f51a3e7e1df",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "-g",
				"role" : "flags"
			},
			{
				"fragment" : "",
				"role" : "flags"
			}
		],
		"language" : "CXX"
	},
	"name" : "leetcode",
	"nameOnDisk" : "leetcode",
	"paths" : 
	{
		"build" : ".",
		"source" : "."
	},
	"sourceGroups" : 
	[
		{
			"name" : "",
			"sourceIndexes" : 
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				11,
				12,
				13,
				14
			]
		},
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				9,
				10,
				15,
				16,
				17,
				18,
				19,
				20,
				21,
				22,
				23,
				24,
				25,
				26,
				27,
				28,
				29,
				30,
				31,
				32,
				33,
				34,
				35,
				36,
				37,
				38,
				39,
				40,
				41,
				42,
				43,
				44,
				45,
				46,
				47,
				48,
				49,
				50,
				51,
				52,
				53,
				54,
				55,
				56,
				57,
				58,
				59,
				60,
				61,
				62,
				63,
				64,
				65,
				66,
				67,
				68,
				69,
				70,
				71,
				72,
				73,
				74,
				75,
				76,
				77,
				78,
				79,
				80,
				81,
				82,
				83,
				84,
				85,
				86,
				87,
				88,
				89,
				90,
				91,
				92,
				93,
				94,
				95,
				96,
				97,
				98,
				99,
				100,
				101,
				102,
				103,
				104,
				105,
				106,
				107,
				108,
				109,
				110,
				111,
				112,
				113,
				114,
				115,
				116,
				117,
				118,
				119,
				120,
				121,
				122,
				123,
				124,
				125,
				126,
				127,
				128,
				129,
				130,
				131,
				132,
				133,
				134,
				135,
				136,
				137,
				138,
				139,
				140,
				141,
				142,
				143,
				144,
				145,
				146,
				147,
				148,
				149,
				150,
				151,
				152,
				153,
				154,
				155,
				156,
				157,
				158,
				159,
				160,
				161,
				162,
				163,
				164,
				165,
				166,
				167,
				168,
				169,
				170,
				171,
				172,
				173,
				174,
				175,
				176,
				177,
				178,
				179,
				180,
				181,
				182,
				183,
				184,
				185,
				186,
				187,
				188,
				189,
				190,
				191,
				192,
				193,
				194,
				195,
				196,
				197,
				198,
				199,
				200,
				201,
				202,
				203,
				204,
				205,
				206,
				207,
				208,
				209,
				210,
				211,
				212
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"path" : "sorting",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "cyclic_sort",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "subarray",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "sliding-window",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "priority_queue",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "greedy",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "recursion_and_dp/subsequence",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "binary_search",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "two-pointers",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "subsets.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/word_search.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"path" : "graph_and_trees",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "recursion_and_dp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "others",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "amazon",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "word_break.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/path_with_maximum_gold.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "target_sum.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/generate_parentheses.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "knapsack.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "sub_tree_of_another_tree.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "maximum_points_you_can_obtain_from_cards.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "greatest_common_divisor_of_strings.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "counted_vowel_strings.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/partition_equal_subset_sum.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/partition_array_into_two_arrays_to_minimize_sum_difference.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "minimum_xor_sum_of_two_arrays.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/maximal_square.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/largest_plus_sign.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "number_of_good_ways_to_split_a_string.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "longest_increasing_subsequence.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/subsequence/number_of_longest_increasing_subsequence.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/combination/combination_sum_iv.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/partition_array_for_maximum_sum.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "longest_palindrome_subsequence.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "minimum_deletions.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/jump_game/jump_game_iii.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/jump_game/jump_game_ii.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/jump_game/jump_game.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/house_robber.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "time_needed_to_inform_all_employees.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "maximum_product_subarray.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "amazon/movies_on_flight.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "amazon/minimum_difficulty_of_a_job_schedule.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "amazon/treasure_island.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "amazon/top_k_frequent_words.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "amazon/slowest_key.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "amazon/music_pair.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "amazon/demolition_robot.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "amazon/maximum_units_on_a_truck.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "amazon/non_overlapping_intervals.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "amazon/k_closest_points_to_origin.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "amazon/prime_air_route.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "decode_ways.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "amazon/robot_bounded_in_a_circle.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/min_opperations_to_reduce_x_to_zero.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/perfect_squares.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/minimum_jumps_to_reach_home.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/spiral_matrix.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "min_number_of_swaps_to_make_string_balanced.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/coin_change/coin_change_2.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "valid_parentheses_string.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "longest_valid_parentheses.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/knapsack.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/maximum_subarray.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/count_number_of_teams.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/maximum_sum_of_two_non_overlapping_subarrays.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/maximum_length_of_a_pair_chain.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/subsequence/increasing_subsequences.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/longest_string_chain.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/integer_break.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/best_sight_seeing_pair.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/Matrix01.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/permutations.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/minimum_deletions_to_make_array_beautiful.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/count_nodes_equal_to_average_of_sub_tree.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/count_good_nodes_in_a_binary_tree.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/find_largest_value_in_each_tree_row.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/stock/best_time_to_buy_and_sell_stock_cool_down.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/minimum_cost_for_tickets.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/flip_string_to_monotone_increasing.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/bitwise_ors_of_subarrays.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/number_of_dice_rolls_with_target_sum.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/stock/best_time_to_buy_and_sell_stock_with_transaction_fee.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/jump_game/jump_game_vii.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "permutation_in_string.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/stock/best_time_to_buy_and_sell_stock_ii.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/stock/best_time_to_buy_and_sell_stock_iii.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/stock/best_time_to_buy_and_sell_stock_iv.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "number_of_good_pairs.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/powerful_number.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/counts_vowel_permutation.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "next_greater_element_iii.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/russian_doll_envelopes.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/frog_jump.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/two_keys_keyboard.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "minimum_time_to_make_rope_colourful.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/minimum_arrows_required_to_burst_balloons.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/subsequence/subsequences.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "two-pointers/reverse_string.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "two-pointers/next_permutation.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "two-pointers/boats_to_save_people.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "greedy/largest_number.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "binary_search/search_a_2d_matrix_ii.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/subsequence/longest_common_subsequence.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/minimum_swaps_to_sort.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/subsequence/distinct_subsequences.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/subsequence/closest_subsequence_sum.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/maximum_profit_in_job_scheduling.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/subsequence/shortest_common_supersequence.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/subsequence/min_ascii_delete_sum_for_two_strings.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "two-pointers/longest_mountain_in_an_array.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/palindrome/longest_palindromic_substring.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/palindrome/palindromic_substring.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/second_max_element.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "priority_queue/sort_characters_by_frequency.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "sliding-window/minimum_window_substring.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "binary_search/find_minimum_in_rotated_sorted_array.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/search_a_word_in_2d_grid_of_characters.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "sliding-window/sender_with_largest_word_count.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/maximum_total_importance_of_roads.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "greedy/maximum_bags_with_full_capacity_of_rocks.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/minimum_lines_to_represent_a_line_chart.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/grid/dungeon_game.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/interleaving_string.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/min_number_of_fibonacci_numbers_sum_upto_k.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/inorder_successor_of_binary_search_tree.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "sliding-window/sliding_window_maximum.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "binary_search/single_element_in_a_sorted_array.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "count_unguarded_cells_in_the_grid.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "priority_queue/car_pooling.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/wild_card_matching.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "shortest_palindrome.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "binary_search/successful_pairs_of_spells_and_potions.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "subarray/count_subarrays_score_less_than_k.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "subarray/subarray_product_less_than_k.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "subarray/number_of_smooth_descent_periods_of_a_stock.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "cyclic_sort/find_all_duplicates_in_an_array.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "cyclic_sort/missing_number.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "cyclic_sort/set_mismatch.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "cyclic_sort/find_all_numbers_disappeared_in_an_array.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/two_sum_duplicates_and_distincts.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "subarray/maximum_sum_circular_subarray.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "binary_search/find_first_and_last_position_of_element_in_sorted_array.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/validate_binary_search_tree.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "largest_rectangle_in_histogram.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/find_minimum_difference_helper.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "others/longest_binary_subsequence_less_than_or_equal_to_k.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/house_robber_iii.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "greedy/divide_array_in_sets_of_k_consecutive_numbers.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "greedy/longest_palindrome.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/check_completeness_of_a_binary_tree.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/count_complete_tree_nodes.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/invert_binary_tree.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "binary_search/search_in_a_rotated_sort_array.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/happy_string.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "priority_queue/heap_sort.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/uncrossed_lines.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "matrix01.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "longest_consecutive_sequence.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "one.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "great_sequence.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "flip_string_to_monotone_increasing.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/lexigographical_numbers.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/shortest_bridge.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/number_of_good_leaf_node_pairs.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "mark_the_dust_sweeper.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "all_distinct.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "number_of_zeroe_filled_subarrays.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/cheapest_flights_within_k_stops.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/path_with_minimum_effort.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/get_the_maximum_score.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/count_servers_that_communicate.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "maximum_sum_of_a_pair_with_equal_digits.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "move_pieces_to_obtain_a_string.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "maximize_the_confusion_of_an_exam.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "count_nodes_with_highest_score.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/maximum_width_of_a_binary_tree.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/maximum_product_of_splitted_binary_tree.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/evaluate_binary_tree.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/count_unreacheable_pairs_of_nodes_in_a_graph.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "distant_bar_codes.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "car_pooling.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "most_profit_assigning_work.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "minimum_increment_to_make_array_unique.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "determine_if_two_strings_are_closer.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "boats_to_save_people.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "minimum_number_of_arrows_to_burst_ballons.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "maximum_earnings_from_taxi.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "the_number_of_weak_characters_in_the_game.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/reachable_nodes_with_restrictions.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/check_if_there_is_a_valid_partition_of_the_array.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/node_with_highest_edge_score.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "largest_palindromic_number.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "count_number_of_bad_pairs.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/amount_of_time_for_binary_tree_to_be_infected.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/as_far_land_as_possible.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/shortest_path_in_a_grid_with_obstacles_elimination.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/valid_parentheses_string.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/number_of_ways_to_select_buildings.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/subsequence/wiggle_subsequence.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/jump_game_vi.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/number_of_ways_to_reach_a_position_after_exactly_k_steps.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "recursion_and_dp/largest_sum_of_averages.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "graph_and_trees/number_of_closed_islands.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "increasing_triplet_subsequence.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "sorting/minimum_difference_between_largest_and_smallest_value_in_three_moves.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "sorting/least_number_of_unique_integers_after_k_removals.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "maximum_sum_of_an_hour_glass.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "sorting/assign_cookies.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "asteroid_collision.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "concatenated_words.cpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "open_the_lock.cpp",
			"sourceGroupIndex" : 1
		}
	],
	"type" : "EXECUTABLE"
}
